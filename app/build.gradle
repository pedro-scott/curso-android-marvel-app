import com.example.buildsrc.Dependencies
import com.example.buildsrc.Enviroment

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
}

apply {
    from '../config/detekt/detekt.gradle'
}

android {
    compileSdkVersion Enviroment.Sdk.compileSdk
    buildToolsVersion Enviroment.Sdk.buildTools

    defaultConfig {
        applicationId "com.example.marvelapp"
        minSdkVersion Enviroment.Sdk.minSdk
        targetSdkVersion Enviroment.Sdk.targetSdk
        versionCode Enviroment.Version.versionCode
        versionName Enviroment.Version.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", Enviroment.Base.url
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation project(':core')
    implementation project(':native')

    Dependencies.AppModule.listLibs.forEach { dependency -> implementation dependency }
    Dependencies.AppModule.listKapt.forEach {dependency -> kapt dependency }
    Dependencies.AppModule.listTest.forEach {dependency -> testImplementation dependency }
    Dependencies.AppModule.listAndroidTest.forEach {dependency -> androidTestImplementation dependency }
}